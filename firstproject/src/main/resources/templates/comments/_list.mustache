<div id="comments-list">
	{{#commentsDtos}}
		<div class="card m-2" id="comments-{{id}}">
			<div class="card-header">
				{{nickname}}
				
				<!-- 모달 트리거 버튼 -->
				<button type="button"
						class="btn btn-sm btn-outline-primary"
						data-bs-toggle="modal"
						data-bs-target="#comment-edit-modal"
						data-bs-id="{{id}}"
						data-bs-nickname="{{nickname}}"
						data-bs-body="{{body}}"
						data-bs-article-id="{{articleId}}">Modifi</button>
				
				<!-- 댓글 삭제 버튼 -->
				<button type="button"
						class="btn btn-sm btn-outline-danger comment-delete-btn"
						data-comment-id="{{id}}">delete</button>
			</div>
			<div class="card-body">
				{{body}}
			</div>
		</div>
	{{/commentsDtos}}
</div>

<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLable">Modifi comment</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<!-- 댓글 수정 폼 -->
				<form>
					<!-- 닉네임 입력 -->
					<div class="mb-3">
						<label class="form-label">nickname</label>
						<input type="text" class="form-control form-control-sm" id="edit-comment-nickname">
					</div>
		
					<!-- 댓글 본문 입력 -->
					<div class="mb-3">
						<label class="form-label">detail</label>
						<textarea type="text" class="form-control form-control-sm" rows="3" id="edit-comment-body"></textarea>
					</div>
		
					<input type="hidden" id="edit-comment-id">
					<input type="hidden" id="edit-comment-article-id">
		
					<!-- 전송 버튼 -->
					<button type="button" class="btn btn-outline-primary btn-sm" id="comment-update-btn">Modifications completed</button>
				</form>
			</div>
		</div>
	</div>
</div>

<!-- 모달 이벤트 처리 -->
<script>
	// 모달 요소 선택
	const commentEditModal = document.querySelector("#comment-edit-modal");
	
	// 모달 이벤트 감지
	commentEditModal.addEventListener("show.bs.modal", function(event) {
		// 트리거 버튼 선택
		const triggerBtn = event.relatedTarget;
		
		// 데이터 가져오기
		const id = triggerBtn.getAttribute("data-bs-id");
		const nickname = triggerBtn.getAttribute("data-bs-nickname");
		const body = triggerBtn.getAttribute("data-bs-body");
		const articleId = triggerBtn.getAttribute("data-bs-article-id");
		
		// 데이터를 반영
		document.querySelector("#edit-comment-nickname").value = nickname;
		document.querySelector("#edit-comment-body").value = body;
		document.querySelector("#edit-comment-id").value = id;
		document.querySelector("#edit-comment-article-id").value = articleId;
	});
	
	// 수정 완료 버튼
	const commentUpdateBtn  = document.querySelector("#comment-update-btn");
	
	// 클릭 이벤트 감지 및 처리
	commentUpdateBtn.addEventListener("click", function() {
		// 수정 댓글 객체 생성
		const comment  = {
			id: document.querySelector("#edit-comment-id").value,
			nickname: document.querySelector("#edit-comment-nickname").value,
			body: document.querySelector("#edit-comment-body").value,
			article: document.querySelector("#edit-comment-article-id").value
		};
		
		// 수정 REST API 호출 -fetch()
		const url = "/api/comments/" + comment.id;
		fetch(url, {
			method: "PATCH",	// PATCH 요청
			body: JSON.stringify(comment),	// 수정된 댓글 객체를 JSON으로 전달
			headers: {
				"Content-Type": "application/json"
			}
		}).then(response => {
			// http 응답 코드에 따른 메시지 출력
			const msg = (response.ok) ? "registration success" : "registration failed";
			alert(msg);
			
			// 현재 페이지를 새로고침
			window.location.reload();
		});
	});
	
</script>

<!-- 댓글 삭제 -->
<script>

	// 삭제 버튼 선택
	const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");
	
	// 삭제 버튼 이벤트를 처리
	commentDeleteBtns.forEach(btn => {
		// 각 버튼의 이벤트 처리를 등록
		btn.addEventListener("click", (event) => { //function(){}이렇게 해도 같은거임
			// 이벤트 발생 요소를 선택
			const commentDeleteBtn = event.target;
			
			// 삭제 댓글 id 가져오기
			const commentId = commentDeleteBtn.getAttribute("data-comment-id");
			
			// 삭제 API 호출 처리
			const url = `/api/comments/${commentId}`; // 백틱 숫자 1번 왼쪽의 키다.
			fetch(url, {
				method: "DELETE"
			}).then(response => {
				// 댓글 삭제 실패 처리
				if(!response.ok){
					alert("Delete failed");
					return;
				}
				
				// 댓글 삭제 성공 시, 댓글을 화면에서 지움
				// window.location.reload();
				const target = document.querySelector(`#comments-${commentId}`);
				target.remove();
			});
		});
	});

</script>